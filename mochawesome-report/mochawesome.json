{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-03T11:21:55.590Z",
    "end": "2023-08-03T11:23:18.105Z",
    "duration": 82515,
    "testsRegistered": 34,
    "passPercent": 20.588235294117645,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 27,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "577df657-3ea9-4c87-a569-cb53b37308be",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
          "title": "login @Login",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\01-login_test.js",
          "file": "\\steps\\01-login_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite in \"login @Login\"",
              "fullTitle": "login @Login \"before all\" hook: codeceptjs.beforeSuite in \"login @Login\"",
              "timedOut": false,
              "duration": 7425,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "989a8148-3365-40e0-b8be-6a1188eb9290",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before in \"login @Login\"",
              "fullTitle": "login @Login \"before each\" hook: codeceptjs.before in \"login @Login\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "35e2dc3b-6a84-4d2b-970e-e6adc50ff478",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before in \"login @Login\"",
              "fullTitle": "login @Login \"before each\" hook: Before in \"login @Login\"",
              "timedOut": false,
              "duration": 6419,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//VOU PARA PAGINA \"LOGIN\"\n  I.amOnPage(Pagina_Login_Wildfly1)\n  //CASO DE PROBLEMA DE SEGURANÇA, APERTA EM MODO AVANÇADO E COTNINUA\n  tryTo(() => I.waitForText('Avançado'))\n  tryTo(() => I.click('Avançado'))\n  tryTo(() => I.click('Ir para 192.168.1.236 (não seguro)'))\n  I.wait(5)",
              "err": {},
              "uuid": "b1ae0d6d-d8a9-4090-902f-6c9181c31018",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite in \"login @Login\"",
              "fullTitle": "login @Login \"after all\" hook: codeceptjs.afterSuite in \"login @Login\"",
              "timedOut": false,
              "duration": 25,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "a3d49945-5e87-48c4-9cb0-aaaa52653779",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs in \"login @Login\"",
              "fullTitle": "login @Login \"after each\" hook: finalize codeceptjs in \"login @Login\"",
              "timedOut": false,
              "duration": 41,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "59f39801-de1e-460e-b1d7-871b0bf7c6e6",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"Já Sou cliente\" @JaSouCliente",
              "fullTitle": "login @Login: Aba \"Já Sou cliente\" @JaSouCliente",
              "timedOut": false,
              "duration": 834,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//EU VOU PARA PAGINA \"JÁ SOU CLIENTE\"\n  I.click('/html/body/my-app/login-component/div/div[1]/div/form/div[2]/button[1]')\n  //EU PREENCHO OS CAMPOS COM OS DADOS\n  I.fillField('Razão Social', Razao_Social)\n  I.fillField('CNPJ', CNPJ_CORRETO)\n  I.fillField('Telefone', Telefone)\n  I.fillField('E-mail', Email)\n  //EU APERTO O reCAPTCH PRA ENVIAR O FORMULARIO.\n  // \n  //\n  //",
              "err": {},
              "uuid": "58af5bd1-8009-4a54-bfb4-b24ee1266c45",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Aba \"Quero ser cliente\" @QueroSerCliente",
              "fullTitle": "login @Login: Aba \"Quero ser cliente\" @QueroSerCliente",
              "timedOut": false,
              "duration": 7316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//VOU PARA ABA \"QUERO SER CLIENTE\"\n  I.click('Quero ser cliente')\n  //EU PREENCHO OS CAMPOS COM OS DADOS\n  //ADICIONO A RAZAO SOCIAL\n  I.fillField('Razão Social', Razao_Social)\n  //ADICIONO O CNPJ\n  I.fillField('CNPJ', '0000000000000')\n  //ADICIONO O TELEFONE\n  I.fillField('Telefone', Telefone)\n  //ADICIONO A INSCRIÇÃO ESTADUAL \n  I.fillField('Inscrição Estadual', '120000000')\n  //ADICIONO O E-MAIL NFe\n  I.fillField('E-mail NFe', 'Email.nfeTeste@gmail.com')\n  //ADICIONO AO NOME FANTASIA \n  I.fillField('Nome Fantasia', Nome_Fantasia)\n  // //EU SELECIONO O ESTADO DO AMAZONAS\n  // I.click('UF')\n  // I.click('/html/body/div[1]/div[3]/div/div/mat-option[2]')\n  //DADOS DO FINANCEIRO\n  //ADICIONO O EMAIL DO FINANCEIRO\n  I.fillField(Email_Financeiro, Email)\n  //ADICIONO O NOME DO CONTADO DO FINANCEIRO\n  I.fillField(Nome_Contato_Financeiro, 'NomeFinanceiro')\n  //ADICIONO AO NUMERO DE TELEFONE DO FINANCEIRO\n  I.fillField(Numero_Financeiro, '48900000000')\n  //CLICO NO BOTAO \"AUTORIZADO A COMPRAR\"\n  I.click('Autorizado a comprar')\n  //DADOS DO COMPRAS\n  //ADICIONO O EMAIL DO COMPRAR\n  I.fillField(Email_Compras, Email)\n  //ADICIONO O NOME DO CONTADO DO COMPRAS\n  I.fillField(Nome_Contato_Compras, 'NomeCompras')\n  //ADICIONO AO NUMERO DE TELEFONE DO COMPRAR\n  I.fillField(Numero_compras, '48900000000')\n  //DOU UM SCROL PARA BAIXO \n  I.scrollPageToBottom()\n  //COLOCO ADICIONO OS FORNECEDORES ATUAIS\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[4]/div[8]/div[2]/input', 'FORNECEDOR TESTE ')\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[4]/div[8]/div[3]/input', ' FORNECEDOR TESTE ')\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[4]/div[8]/div[4]/input', 'FORNECEDOR TESTE ')\n  //ADICIONO NA AREA TEXTO OS ITENS QUE EU QUERO.\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[4]/div[10]/mat-form-field/div/div[1]/div/textarea', 'Maquinas de testes')\n  //ADICIONO QUAL O CANAL DE ATENDIMENTO \n  I.click('Quero comprar presencialmente pelo representante comercial')\n  I.click(' Quero comprar pelo televendas via WhatsApp, e-mail e telefone')\n  I.click('Quero comprar online pelo site ou aplicativo')\n  //DOU UM SCROL PARA BAIXO \n  I.scrollPageToBottom()\n  //SELECIONO QUAL REDE SOCIAL EU CONHECI A REZZADORI\n  I.click('Instagram')\n  I.click('Site')\n  I.click('Visita')\n  I.click('Google')\n  I.click('Indicação')\n  I.waitForText('Digite a indicação de como nos conheceu*')\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[7]/div[2]/mat-radio-group/div[5]/input', 'TESTE PELO GOOGLE')\n  I.click('Outro')\n  I.waitForText('Digite o outro meio de como nos conheceu*')\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[7]/div[2]/mat-radio-group/div[6]/input', 'TESTE PELO GOOGLE')\n  I.saveScreenshot('@QueroSerCliente.png')\n  //AQUI PRECISA VALIDAR O reCAPTCHA PRA PODER ENVIAR O FORMULARIO.\n  //\n  //\n  //\n  //",
              "err": {},
              "uuid": "b9a7cb4d-9ca0-405f-aa96-3e8cee98f19e",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Aba \"Esqueci a senha\" @EsqueciMinhaSenha",
              "fullTitle": "login @Login: Aba \"Esqueci a senha\" @EsqueciMinhaSenha",
              "timedOut": false,
              "duration": 444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//VOU PARA ABA \"ESQUECI MINHA SENHA \"\n  I.click('Esqueci minha senha')\n  I.fillField('CNPJ', CNPJ_CORRETO)\n  I.fillField('E-mail', Email)\n  // PRECISA VALIDAR O reCAPTCHA AQUI\n  //\n  //\n  //",
              "err": {},
              "uuid": "50dc3228-5b2b-4478-a2f1-288995780715",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login com CNPJ Inválido @LoginCNPJinvalido",
              "fullTitle": "login @Login: Login com CNPJ Inválido @LoginCNPJinvalido",
              "timedOut": false,
              "duration": 2691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//FAÇO LOGIN COM CNPJ INVÁLIDO.\n  Login(CNPJ_INVALIDO, SENHA_CORRETA)\n  I.waitForText('Cliente não cadastrado.')\n  //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n  I.saveScreenshot('@LoginCNPJinvalido.png')",
              "err": {},
              "uuid": "efa68714-2cf7-4d97-b591-8bb232fae2f9",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login com Senha Inválida @LoginSenhaInvalida",
              "fullTitle": "login @Login: Login com Senha Inválida @LoginSenhaInvalida",
              "timedOut": false,
              "duration": 2829,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//FAÇO LOGIN COM A SENHA INVALIDA.\n  Login(CNPJ_CORRETO, SENHA_INVALIDA)\n  I.waitForText('Senha inválida.')\n  I.saveScreenshot('@LoginSenhaInvalida.png')",
              "err": {},
              "uuid": "e1ee8e9f-0586-4f32-bc23-47463c18b791",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login Correto @LoginCorreto",
              "fullTitle": "login @Login: Login Correto @LoginCorreto",
              "timedOut": false,
              "duration": 5351,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//FAÇO LOGIN COM OS DADOS CORRETOS.\n  Login(CNPJ_CORRETO, SENHA_CORRETA)\n  I.waitForText('08070', 10)\n  I.saveScreenshot('@LoginCorreto.png')",
              "err": {},
              "uuid": "cd7bf09c-a855-4bb3-a4ff-03a20758e417",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout @Logout",
              "fullTitle": "login @Login: Logout @Logout",
              "timedOut": false,
              "duration": 10697,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//FAÇO LOGIN COM OS DADOS CORRETOS.\n  Login(CNPJ_CORRETO, SENHA_CORRETA)\n  //ESPERO PELA ABA \"PRODUTOS\"\n  I.waitForText('08070', 10)\n  //CLICO NO BOTAO DE MENU \n  I.click('/html/body/my-app/home-component/mat-toolbar/mat-toolbar-row[1]/button')\n  //CLICO NO BOTAO SAIR\n  I.waitForText('SAIR', 10)\n  I.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav/mat-nav-list/a[7]/div')\n  //AGUARDO PELO INPUT \"CNPJ\" NA ABA LOGIN\n  I.waitForText('CNPJ', 5)\n  I.saveScreenshot('@Logout.png')",
              "err": {},
              "uuid": "dbd95145-8354-4f7f-a534-9fd3cad55ca6",
              "parentUUID": "dc5ab88b-07ac-4541-be94-466cdc98aab8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58af5bd1-8009-4a54-bfb4-b24ee1266c45",
            "b9a7cb4d-9ca0-405f-aa96-3e8cee98f19e",
            "50dc3228-5b2b-4478-a2f1-288995780715",
            "efa68714-2cf7-4d97-b591-8bb232fae2f9",
            "e1ee8e9f-0586-4f32-bc23-47463c18b791",
            "cd7bf09c-a855-4bb3-a4ff-03a20758e417",
            "dbd95145-8354-4f7f-a534-9fd3cad55ca6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30162,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "f7c9a6d8-21a4-4269-8f4f-0f4ef7e5f68f",
          "title": "Pedido @Pedido",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\02-Pedido_test.js",
          "file": "\\steps\\02-Pedido_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Pedido @Pedido \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "2d2568b1-c5fe-4cf4-88a8-f28da45e48e5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Pedido @Pedido \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "34abfeb4-ed28-496f-b5d9-93f876232fcc",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Pedido @Pedido \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "ca0668ac-e11a-413b-9b66-054cafdda763",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Pedido @Pedido \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "60ea9794-495b-49b4-b48a-f268fd597668",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Pedido @Pedido \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "3c69f044-32d4-4f6c-b076-1e9158ea37c5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"Inicial\" @AbaInicial",
              "fullTitle": "Pedido @Pedido: Aba \"Inicial\" @AbaInicial",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.resizeWindow(1920, 1080);\n    //NO PRODUTO \"ACABAMENTO CROMADO\" ADICIONO +5 PRODUTOS.\n    I.refreshPage();\n    I.wait(4)\n    I.amOnPage(Pagina_Produto_16410_Wildfly1)\n    I.waitForText('Quantidade', 20)\n    I.fillField('Quantidade', '5')\n    //ESPERO PELO VALOR DE 5 PEDIDOS ADICIONADOS NO CARRINHO\n    I.waitForText('237,25', 10)\n    //REMOVO 2 PEDIDOS \n    I.fillField('Quantidade', '3')\n    //ESPERO PELO VALOR DE APENAS 3 PEDIDOS ADICIONADOS NO CARRINHO\n    I.waitForText('142,35', 5)\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@AbaInicial.png')",
              "err": {},
              "uuid": "fb13d84e-f3a7-4a68-8bca-18942c715b64",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"Inicial\" Histórico - Pedidos já Comprados. @ItensJaComprados",
              "fullTitle": "Pedido @Pedido: Aba \"Inicial\" Histórico - Pedidos já Comprados. @ItensJaComprados",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CASO A ABA \"FILTROS\" ESTEJA FECHADO, IRÁ ABRIR.\n    tryTo(() => I.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav-content/div[1]/produtos-component/mat-sidenav-container/mat-sidenav-content/mat-toolbar/button'))\n    //CLICO NA FLAG \"ITENS JA COMPRADOS\"\n    I.click('ITENS JÁ COMPRADOS')\n    //ESPERO PELO PRODUTO JA COMPRADOS\n    tryTo(() => I.waitForText('08070', 20))\n    tryTo(() => I.waitForText(\"Nenhum item encontrado para estes filtros.\", 20))\n    //DESMARCO A FLAG\n    I.click('ITENS JÁ COMPRADOS')\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@ItensJaComprados.png')",
              "err": {},
              "uuid": "56a5dd83-59d2-4c73-bd94-81deb77e1de7",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"Inicial\" Filtros @Filtros",
              "fullTitle": "Pedido @Pedido: Aba \"Inicial\" Filtros @Filtros",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CASO A ABA \"FILTROS\" ESTEJA FECHADO, IRÁ ABRIR.\n    tryTo(() => I.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav-content/div[1]/produtos-component/mat-sidenav-container/mat-sidenav-content/mat-toolbar/button'))\n    //CLICO NA FLAG \"PROMOÇÃO\"\n    I.click('PROMOÇÃO')\n    //ESPERO PELO PRODUTO \"08070\"\n    I.waitForText('08070')\n    //DESMARCO A FLAG \"\"\n    I.click('PROMOÇÃO')\n    //CLICO NA FLAG \"ABRAÇADEIRAS\"\n    I.click('ABRAÇADEIRAS')\n    //ESPERO PELO PRODUTO \"16687\"\n    I.waitForText('16687')\n    //DESMARCO A FLAG \"ABRAÇADEIRAS\"\n    I.click('ABRAÇADEIRAS')\n    //CLICO NA FLAG \"ACESSÓRIOS CAIXA ACOPLADA\"\n    I.click('ACESSÓRIOS CAIXA ACOPLADA')\n    //ESPERO PELO PRODUTO \"17331\"\n    I.waitForText('17331')\n    //DESMARCO A FLAG \"ACESSÓRIOS CAIXA ACOPLADA\"\"\n    I.click('ACESSÓRIOS CAIXA ACOPLADA')\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@Filtros.png')",
              "err": {},
              "uuid": "bb4f54f0-f257-44fc-9d52-700f94f48551",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"CARRINHO\" Continuar comprando @AbaContinuarComprando",
              "fullTitle": "Pedido @Pedido: Aba \"CARRINHO\" Continuar comprando @AbaContinuarComprando",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ADICIONO 2 ITENS E VOU PARA O CARRINHO\n    pedido.CriarPedido();\n    //VOU PARA BAIXO \n    I.scrollPageToBottom();\n    //CLICO NO BOTAO \"CONTINUAR COMPRANDO\"\n    I.click('CONTINUAR COMPRANDO')\n    //AGUARDO IR PARA O MENU INICIAL\n    I.wait(1)\n    //VOU PARA CIMA \n    I.scrollPageToTop();\n    //ESPERO VER O PRODUTO \"08070\"\n    I.waitForText('08070', 10)\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@AbaContinuarComprando.png')",
              "err": {},
              "uuid": "ba8305cc-cfbc-4d42-a906-659a52eb9091",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"CARRINHO\" Solicitar Orçamento @SolicitarOrcamento",
              "fullTitle": "Pedido @Pedido: Aba \"CARRINHO\" Solicitar Orçamento @SolicitarOrcamento",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//REALIZO O PEDIDO E VOU PARA O CARRINHO.\n    pedido.CriarPedido();\n    //VOU PARA BAIXO \n    I.scrollPageToBottom();\n    //CLICO NO BOTAO \"SOLICITAR ORÇAMENTO\"\n    I.click('SOLICITAR ORÇAMENTO')\n    //ESPERO PELA MENSAGEM \"ORÇAMENTO SOLICITADO\"\n    I.waitForText('Orçamento solicitado com sucesso', 10)\n    //CLICO NO BOTAO \"SOLICITAR NOVO ORÇAMENTO\"\n    I.click('SOLICITAR NOVO ORÇAMENTO')\n    //ESPERO PELO ITEM NO MENU INICIAL\n    I.waitForText('08070', 10)\n    //VOU PARA ABA \"PEDIDOS\" E VEJO SE MOSTRA O PEDIDO FEITO ANTERIORMENTE \n    I.amOnPage(Pagina_Historico_Pedido_Wildfly1)\n    I.waitForText('237,25', 10)\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@SolicitarOrcamento.png')",
              "err": {},
              "uuid": "15dd8286-8e3f-4cb6-8b04-ee4692e85b3b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"CARRINHO\" Finalizar pedido @AbaCarrinhoFinalizarPedido",
              "fullTitle": "Pedido @Pedido: Aba \"CARRINHO\" Finalizar pedido @AbaCarrinhoFinalizarPedido",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//REALIZO O PEDIDO E VOU PARA O CARRINHO.\n    pedido.CriarPedido();\n    //VOU PARA BAIXO \n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"AVISTA\"\n    I.click('Forma Pgto.')\n    I.click('//*[@id=\"mat-option-0\"]')\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VOU PARA ABA \"PEDIDOS\" E VEJO SE MOSTRA O PEDIDO FEITO ANTERIORMENTE \n    I.amOnPage(Pagina_Historico_Pedido_Wildfly1)\n    I.waitForText('237,25', 10)\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@AbaCarrinhoFinalizarPedido.png')",
              "err": {},
              "uuid": "af9f24b0-c98a-4639-8e25-74e792a173aa",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "fb13d84e-f3a7-4a68-8bca-18942c715b64",
            "56a5dd83-59d2-4c73-bd94-81deb77e1de7",
            "bb4f54f0-f257-44fc-9d52-700f94f48551",
            "ba8305cc-cfbc-4d42-a906-659a52eb9091",
            "15dd8286-8e3f-4cb6-8b04-ee4692e85b3b",
            "af9f24b0-c98a-4639-8e25-74e792a173aa"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "16a8f2b5-73ea-4423-a443-8ec6d964c3fc",
          "title": "Carrinho Dentro Do Item @CarrinhoDentroDoItem",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\03-CarrinhoDentroDoItem_test.js",
          "file": "\\steps\\03-CarrinhoDentroDoItem_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "4390a2a2-cab9-46d7-9564-f9b41aa27036",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "9f7d7bb6-fbd9-4ad0-9ee9-a48816f08045",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "ceec3a26-9db1-4335-9d39-f5243cc2c898",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "a6f56156-bfc7-42ee-957a-b34054c34f7e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "9bf84761-4754-4b3b-a013-ee491b7d7576",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"Carrinho\" Dentro do item - Finalizar Pedido @DentroDoItem",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem: Aba \"Carrinho\" Dentro do item - Finalizar Pedido @DentroDoItem",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//EU CLICO NO ITEM QUE QUERO COMPRAR\n    I.click('08070')\n    //ESPERO PELO CODIGO DO PRODUTO CORRETO 3387\n    I.waitForText('Código: 08070', 20)\n    //VALIDAÇÃO\n    //VALIDO A FICHA TECNICA DO PRODUTO.\n    I.waitForText('Ficha técnica')\n    I.waitForText('Pino adaptador com 3 saidas 2p+T (padrão novo). Não indicado adaptar vários pinos juntos devido a sobrecarga de tensão.')\n    I.waitForText('Atende as normas NBR NM 60884-1 e NBR 14136.')\n    //  ESCOLHO SE EU QUERO \"CX\" OU \"UN\"\n    I.click('CX')\n    //ADICIONO 4  ITEM POR QUANTIDADE \n    I.fillField('Quantidade', '4')\n    \n    //VALIDAÇÃO\n    I.waitForText('320,00', 5)\n    I.waitForText('Vl. Total (IPI + ST + FCP): R$ 320,00', 5)\n    //CLICO EM FINALIZAR PEDIDO\n    I.click('FINALIZAR PEDIDO')\n    //VOU PARA BAIXO \n    I.scrollPageToBottom();\n    //EU ESCOLHO A FORMA DE PAGAMENTO AVISTA\n    pedido.PagamentoAvista();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Pedido Finalizado', 5)\n    // /VOU PARA ABA \"PEDIDOS\" E VEJO SE MOSTRA O PEDIDO FEITO ANTERIORMENTE \n    I.amOnPage(Pagina_Historico_Pedido_Wildfly1)\n    //VALIDAÇÃO\n    I.waitForText('320', 10)",
              "err": {},
              "uuid": "b5c017f9-fd44-4231-aacd-b2e4c2d35ff0",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b5c017f9-fd44-4231-aacd-b2e4c2d35ff0"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "86a5a11a-ab61-4620-8202-b3a4eab3ee85",
          "title": "Finalizar Pedido @FinalizarPedido",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\04-FinalizarPedido_test.js",
          "file": "\\steps\\04-FinalizarPedido_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Finalizar Pedido @FinalizarPedido \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "5c63993a-489b-471b-98ec-86ea60a9d130",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Finalizar Pedido @FinalizarPedido \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "705d1d9f-8277-468e-99cc-bf5a0cc2c6e0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Finalizar Pedido @FinalizarPedido \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "dc18d04e-1e0a-4f34-b519-1d425c45ef78",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Finalizar Pedido @FinalizarPedido \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "3932dbfd-e9a9-490c-8650-12e66330e6f0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Finalizar Pedido @FinalizarPedido \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "ed85b1cd-2107-4bad-b242-0d1fe05f094a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"FINALIZAR\" Validar valores do carrinho @AbaFinalizarValidarValoresCarrinho",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" Validar valores do carrinho @AbaFinalizarValidarValoresCarrinho",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA DOIS PRODUTOS DIFERENTES NO CARRINHO.\n    pedido.AdicionarDoisProdutosNoCarrinho();\n    I.scrollPageToTop();\n    // VALIDAÇÃO DOS VALORES E PRODUTO DO CARRINHO CONFORME OS PEDIDOS\n    I.waitForText('241,25',30)\n    I.waitForText('4,00',30)\n    I.waitForText('237,25',30)",
              "err": {},
              "uuid": "e2284c70-c684-4ac3-ad85-9f62774fba0b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" Validar Remoção de um produto @AbaFinalizarValidarRemocaoCarrinho",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" Validar Remoção de um produto @AbaFinalizarValidarRemocaoCarrinho",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA DOIS PRODUTOS DIFERENTES NO CARRINHO.\n    pedido.AdicionarDoisProdutosNoCarrinho();\n    //EU REMOVO O PRIMEIRO ITEM \"17351 - ACABAMENTO MONOCOMANDO CHUVEIRO NEXUS 3/4POL CROMADO DOCOL\"\n    I.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav-content/div[1]/carrinho-component/div/ul/li[1]/div/div[2]/button')\n  \n    //VALIDAÇÃO DOS VALORES E PRODUTO DO CARRINHO CONFORME FOI REMOVIDO 1 ITEM.\n    I.waitForText('Total: R$ 237,25',10)\n    I.waitForText('47,45',10)",
              "err": {},
              "uuid": "03d1a1f0-2cc9-4e37-8a3a-f4e6e2eca27e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\"  ENTREGA - Endereço de Entrega PRINCIPAL @AbaFinalizarEntregaEnderecoPrincipal",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\"  ENTREGA - Endereço de Entrega PRINCIPAL @AbaFinalizarEntregaEnderecoPrincipal",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA DOIS PRODUTOS DIFERENTES NO CARRINHO.\n    pedido.AdicionarDoisProdutosNoCarrinho();\n    I.click('Endereço de Entrega')\n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"AVISTA\"\n    pedido.PagamentoAvista();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Pedido Finalizado', 5)",
              "err": {},
              "uuid": "d669127f-62e4-4495-9a4a-be439aa9dc42",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\"  ENTREGA - Endereço de Entrega SECUNDÁRIO @AbaFinalizarEntregaEnderecoSecundario",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\"  ENTREGA - Endereço de Entrega SECUNDÁRIO @AbaFinalizarEntregaEnderecoSecundario",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA DOIS PRODUTOS DIFERENTES NO CARRINHO.\n    pedido.AdicionarDoisProdutosNoCarrinho();\n    //TROCO PARA O ENDEREÇO SECUNDÁRIO.\n    I.click('Endereço de Entrega')\n    I.wait(2)\n    I.click('ALTERAR')\n    I.wait(2)\n    I.click('SELECIONAR')\n    I.waitForText('RUA HELIO ESTEFANO BECKER , 1 (TESTE)',5)\n    I.waitForText('REAL PARQUE, SAO JOSE - 88113460',5)\n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"AVISTA\"\n    pedido.PagamentoAvista();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Pedido Finalizado', 5)",
              "err": {},
              "uuid": "9cef0768-9d29-449d-8b73-22f4fc12d646",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" ENTREGA - Retirada Balcao @AbaFinalizarEntregaRetiradaBalcao",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" ENTREGA - Retirada Balcao @AbaFinalizarEntregaRetiradaBalcao",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA DOIS PRODUTOS DIFERENTES NO CARRINHO.\n    pedido.AdicionarDoisProdutosNoCarrinho();\n    I.click('Retirada no Balcão')\n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"AVISTA\"\n    pedido.PagamentoAvista();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Pedido Finalizado', 5)",
              "err": {},
              "uuid": "6811dd45-eab7-4ab9-9dc8-815cf63423b1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" AVISTA - VALOR ABAIXO DE 200 @AbaFinalizarAvistaValorAbaixo",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" AVISTA - VALOR ABAIXO DE 200 @AbaFinalizarAvistaValorAbaixo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONO APENAS UM PRODUTO COM O VALOR DE 50, ABAIXO O PEDIDO MINIMO.\n    pedido.CriarPedidoAbaixoDe200();\n    I.click('Retirada no Balcão')\n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"AVISTA\"\n    pedido.PagamentoAvista();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Parcela 1(100%) abaixo valor mínimo (R$200.00).', 5)",
              "err": {},
              "uuid": "a1da71c5-e4a0-49c2-86c8-8dc06557f193",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" BOLETO - VALOR ABAIXO DE 100 @FinalizarBoletoValorAbaixo",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" BOLETO - VALOR ABAIXO DE 100 @FinalizarBoletoValorAbaixo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONO APENAS UM PRODUTO COM O VALOR DE 50, ABAIXO O PEDIDO MINIMO.\n    pedido.CriarPedidoAbaixoDe100();\n    I.click('Retirada no Balcão')\n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"BOLETO ITAU\"\n    pedido.PagamentoBoleto();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    //CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Parcela 1(100%) abaixo valor mínimo (R$100.00).', 5)",
              "err": {},
              "uuid": "6ed1fee6-9450-4c07-abf3-75c7c6151e2f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" Continuar Comprando @AbaFinalizarContinuarComprando",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" Continuar Comprando @AbaFinalizarContinuarComprando",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA PEDIDOS NO CARRINHO, E ME DEIXA ESCOLHER SE QUERO REALIZAR ORÇAMENTO,FINALIZAR OU CONTINUAR A COMPRA.\n    pedido.PedidoQuaseCompleto();\n    I.click('CONTINUAR COMPRANDO')\n    I.scrollPageToTop();\n    //VALIDAÇÃO\n    I.waitForText('08070', 5)",
              "err": {},
              "uuid": "81965e91-f67d-4792-8caa-f4d9233fd24a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" Finalizar Pedido @AbaFinalizarFinalizarPedido",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" Finalizar Pedido @AbaFinalizarFinalizarPedido",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA PEDIDOS NO CARRINHO, E ME DEIXA ESCOLHER SE QUERO REALIZAR ORÇAMENTO,FINALIZAR OU CONTINUAR A COMPRA.\n    pedido.PedidoQuaseCompleto();\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Pedido Finalizado', 5)",
              "err": {},
              "uuid": "95e3d279-5f0c-482a-85bd-78133ccb6eda",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" Solicitar Orçamento @AbaFinalizarSolicitarOrcamento",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" Solicitar Orçamento @AbaFinalizarSolicitarOrcamento",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA PEDIDOS NO CARRINHO, E ME DEIXA ESCOLHER SE QUERO REALIZAR ORÇAMENTO,FINALIZAR OU CONTINUAR A COMPRA.\n    pedido.PedidoQuaseCompleto();\n    I.click('SOLICITAR ORÇAMENTO')\n    //VALIDAÇÃO\n    I.waitForText('Obrigado por cotar conosco. Para aprovar sua cotação entre em contato com seu representante no fone (49) 3331-0600.', 5)",
              "err": {},
              "uuid": "ef97988f-53d4-4deb-af92-8dc8fa64a3c8",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "e2284c70-c684-4ac3-ad85-9f62774fba0b",
            "03d1a1f0-2cc9-4e37-8a3a-f4e6e2eca27e",
            "d669127f-62e4-4495-9a4a-be439aa9dc42",
            "9cef0768-9d29-449d-8b73-22f4fc12d646",
            "6811dd45-eab7-4ab9-9dc8-815cf63423b1",
            "a1da71c5-e4a0-49c2-86c8-8dc06557f193",
            "6ed1fee6-9450-4c07-abf3-75c7c6151e2f",
            "81965e91-f67d-4792-8caa-f4d9233fd24a",
            "95e3d279-5f0c-482a-85bd-78133ccb6eda",
            "ef97988f-53d4-4deb-af92-8dc8fa64a3c8"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "5ab76def-af4c-4d8d-815b-6dd6c977177b",
          "title": "Pedidos Historico @PedidosHistorico",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\05-Pedidos-Historico_test.js",
          "file": "\\steps\\05-Pedidos-Historico_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Pedidos Historico @PedidosHistorico \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "711fff70-97f3-4811-96d8-342c97ba1291",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Pedidos Historico @PedidosHistorico \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "9ff26b8c-725c-4a7f-bab1-6e0cd6e5aaea",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Pedidos Historico @PedidosHistorico \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "4c3320fb-3479-4f5c-a9c9-103c81522397",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Pedidos Historico @PedidosHistorico \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "94c7f081-9c29-4340-bf9e-e740bbe517cb",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Pedidos Historico @PedidosHistorico \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "acb4c2bf-cb98-4c1a-a4b9-6a11a49012e0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"Pedidos\" Detalhes @PedidosDetalhes",
              "fullTitle": "Pedidos Historico @PedidosHistorico: Aba \"Pedidos\" Detalhes @PedidosDetalhes",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CLICO EM \"PEDIDOS\"\nI.wait(2)\nI.amOnPage(Pagina_Historico_Pedido_Wildfly1)\nI.wait(5)\n//CLICO EM \"DETALHES\"\nI.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav-content/div[1]/historico-component/div/mat-table/mat-row[1]/mat-cell[9]/a')\n//ESPERO PELAS MENSAGENS CORRETAS.\nI.waitForText('AVISTA')\nI.waitForText('241,25')\nI.waitForText('16410')\nI.waitForText('08070')\nI.waitForText('Forma Pgto: DINHEIRO')",
              "err": {},
              "uuid": "b702aeac-8c6d-4db4-b762-9894592fe1a4",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b702aeac-8c6d-4db4-b762-9894592fe1a4"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "28c984d4-e123-409e-813b-cc7dd6d214ad",
          "title": "Financeiro Historico @FinanceiroHistorico",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\06-Financeiro-Historico_test.js",
          "file": "\\steps\\06-Financeiro-Historico_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "617cfaf8-87d4-4eb9-891d-31ed8773d543",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "77a1746c-df98-4883-9178-46193900750b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "00cffc8b-c762-40cf-829e-cc3b55fd40ed",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "92794de5-65a5-4b42-92b9-5ed24c20615c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "0d463458-bde0-4f86-855d-0aaae33ad964",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"Financeiro\" Detalhes @FinanceiroDetalhes",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico: Aba \"Financeiro\" Detalhes @FinanceiroDetalhes",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.wait(2)\n//VOU PARA A ABA \"FINANCEIRO\"\nI.amOnPage(Pagina_Historico_Financeiro_Wildfly1)\nI.wait(5)\n//CLICO EM \"DETALHES\"\nI.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav-content/div[1]/historico-financeiro/div/mat-table/mat-row[1]/mat-cell[6]/a')\n//ESPERO PELAS MENSAGENS\nI.waitForText('Detalhes')\nI.waitForText('Código filial: 1')\nI.waitForText('Código Cliente: 2241')\nI.waitForText('Nr documento: 512034')\nI.waitForText('Data emissão: 03/08/2021')\nI.waitForText('Linha digitavel: 00190.00009 01526.510001 00467.475174 4 87290000014830')\nI.waitForText('Valor nominal: R$ 148,30')\nI.waitForText('Chave de Acesso NFe: 42210875384404000125550040005120341116285150')\nI.waitForText('Situação: Quitado')\nI.waitForText('Forma de pagamento: BOLETO BANCO DO BRASIL')\nI.waitForText('Nosso número: 0000467475')\nI.waitForText('Número documento: 512034-1')\nI.waitForText('Valor saldo: R$ 0,00')",
              "err": {},
              "uuid": "14055ef8-dc50-4580-9468-6606d2a7506a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "14055ef8-dc50-4580-9468-6606d2a7506a"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "d4526776-d819-48f0-8a37-fa29c3216062",
          "title": "Senhas @Senhas",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\07-Senha_test.js",
          "file": "\\steps\\07-Senha_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Senhas @Senhas \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "8a9a7621-8b5e-4831-a756-e5c56223361c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Senhas @Senhas \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "0638992a-a57a-424e-8bc8-86a875d6ffd5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Senhas @Senhas \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "c1cd9c37-b813-4382-9e89-120c6bfe1f0e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Senhas @Senhas \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "81c1cccd-4216-4ea5-a8a8-f3bd258dfd32",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Senhas @Senhas \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "f9579880-3af3-4c48-ba2b-999b9cd28f3a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Trocar Senha @TrocarSenha",
              "fullTitle": "Senhas @Senhas: Trocar Senha @TrocarSenha",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CLICO PRA ABRIR O MENU PARA ALTERAR A SENHA\n    I.click('/html/body/my-app/home-component/mat-toolbar/mat-toolbar-row[1]/button')\n    I.click('ALTERAR')\n    I.fillField('Senha Antiga','48303523')\n    I.fillField('Senha Nova','Flex48303523')\n    I.fillField('Confirme a nova senha','Flex48303523')\n    I.click('ALTERAR')\n    //VALIDAÇÃO\n    I.waitForText('Senha alterada com sucesso',5)\n    Login(CNPJ_CORRETO, SENHA_ALTERADA);\n    I.waitForText('08070', 10)\n    //CLICO PRA ABRIR O MENU PARA ALTERA A SENHA PARA A ANTERIOR \n    I.click('/html/body/my-app/home-component/mat-toolbar/mat-toolbar-row[1]/button')\n    I.click('ALTERAR')\n    I.fillField('Senha Antiga','Flex48303523')\n    I.fillField('Senha Nova','48303523')\n    I.fillField('Confirme a nova senha','48303523')\n    I.click('ALTERAR')\n    \n    //VALIDAÇÃO\n    I.waitForText('Senha alterada com sucesso',5)",
              "err": {},
              "uuid": "29eb3316-5efa-4cf9-ab74-d2f7c67f0c1a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "29eb3316-5efa-4cf9-ab74-d2f7c67f0c1a"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "355e2971-981d-451f-8dd6-bd255c55debb",
          "title": "Versao Aplicativo @VersaoAplicativo",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\08-VersaoAplicativo_test.js",
          "file": "\\steps\\08-VersaoAplicativo_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "d1dd3e4e-6a07-4c0b-80c8-6f1cdb8723fe",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "9147b095-3f90-4998-bcf8-3bb582333fee",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "edaa57ec-0c76-4491-9ab8-1a1cf452fee2",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "93c14ad1-12d2-43cb-9a9e-d1256c597930",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "87e6b529-65bd-456d-9625-c4df843145fd",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Versao Aplicativo @VersaoAplicativo",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo: Versao Aplicativo @VersaoAplicativo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CLICO NO MENU \n    I.click('/html/body/my-app/home-component/mat-toolbar/mat-toolbar-row[1]/button')\n    \n    //CLICO EM \"VERSAO MÓVEL\"\n    I.click('VERSÃO MÓVEL')\n    \n    //AQUI NAO DA PRA VALIDAR A PAGINA DO GOOGLE STORE",
              "err": {},
              "uuid": "26df133b-4403-445e-8314-a74c1d220125",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "26df133b-4403-445e-8314-a74c1d220125"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "10ea0d4f-a80d-49fa-928e-c4be8db6887f",
          "title": "ClienteInativo @ClienteInativo",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\09-ClienteInativo_test.js",
          "file": "\\steps\\09-ClienteInativo_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "ClienteInativo @ClienteInativo \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "9b7e39f5-fa94-4135-a2fc-5fc3ee97f55a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "ClienteInativo @ClienteInativo \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "d2cae635-a81f-4fd6-860d-667eceb86e51",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "ClienteInativo @ClienteInativo \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "c57595a3-3bad-403a-8d73-be18919308fc",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: AfterSuite",
              "fullTitle": "ClienteInativo @ClienteInativo \"after all\" hook: AfterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "c1977303-7e12-49d1-8e33-a3ac99baaba1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "ClienteInativo @ClienteInativo \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "51a0d35d-f9af-4a94-bdee-ef6a75e3f6d2",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "ClienteInativo @ClienteInativo \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "3e29bb7d-c8c9-49da-b827-3694bbdb230e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Cliente Inativo @ClienteInativo",
              "fullTitle": "ClienteInativo @ClienteInativo: Cliente Inativo @ClienteInativo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESATIVO O CLIENTE\n    client.query(\"UPDATE CLIENTE SET FL_ATIVO = 'N' WHERE cd_cliente = '51668';\")\n        .then((result) => {\n            console.log('Cliente inativado')\n        })\n        .catch((err) => {\n            console.error('Erro ao inativar Cliente:', err);\n        })\n    // FAÇO LOGIN\n    tryTo(() => Login(CNPJ_CORRETO, SENHA_CORRETA))\n    // ESPERO PELA MENSAGEM DE ERRO. \"CLIENTE INATIVO.\"\n    I.waitForText('Cliente inativo.', 20)",
              "err": {},
              "uuid": "37746834-7c7d-4a27-9403-1f9f5d104543",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "37746834-7c7d-4a27-9403-1f9f5d104543"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "107b2ce6-76aa-426b-9d69-1a677490cb1b",
          "title": "Controle de Credito Bloqueado @CtcBloqueado",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\10-ControleDeCreditoBloqueado_test.js",
          "file": "\\steps\\10-ControleDeCreditoBloqueado_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "e42acdc4-04f5-4ad9-aca8-850215ff8312",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "d8321d12-b44f-4205-bf0f-7009ddde2847",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "a440ebbb-d464-4922-938a-373cabb8aa73",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: AfterSuite",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"after all\" hook: AfterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "f1561f36-f106-4ec9-9c86-ca7da94f45d1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "7210dee0-4681-4bdc-9cd9-4710df75c218",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "c6754e94-3d75-4f20-9243-62b39b986621",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Controle de crédito Bloqueado ",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado: Controle de crédito Bloqueado ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESATIVO O CLIENTE\n    client.query(\" update cliente set fl_situacao_credito = '0' where cd_cliente = '51668'\")\n        .then((result) => {\n            console.log('Mudado para Controle de crédito bloqueado.')\n        })\n        .catch((err) => {\n            console.error('Erro ao inativar Cliente:', err);\n        })\n    // FAÇO LOGIN\n    tryTo(() => Login(CNPJ_CORRETO, SENHA_CORRETA))\n    // ESPERO PELA MENSAGEM DE ERRO. \"CLIENTE NAO LIBERADO PELO FINANCEIRO\"\n    I.waitForText('Cliente não liberado pelo financeiro.', 20)",
              "err": {},
              "uuid": "08f5121f-f4b6-4e40-a049-a1100b139507",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "08f5121f-f4b6-4e40-a049-a1100b139507"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "5ccfb787-7529-42de-9922-3a8beb972772",
          "title": "Controle de Credito Avista @CtcAvista",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\11-ControleDeCreditoAvista_test.js",
          "file": "\\steps\\11-ControleDeCreditoAvista_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "951a0e89-3710-493a-8713-de4570c2df9d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "cc76aaf7-4883-42f7-86e4-2aba4995873e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "f1b91cc4-5f34-4077-892b-e06884ada888",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: AfterSuite",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"after all\" hook: AfterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "840152db-b46b-4c38-8805-0333082f797e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "ea912e7e-a6dc-4459-b516-6df5565ebcc5",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "f7cb5c6e-a3a4-4f14-94ed-6d13f913e905",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Controle de crédito Avista",
              "fullTitle": "Controle de Credito Avista @CtcAvista: Controle de crédito Avista",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESATIVO O CLIENTE\n    client.query(\" update cliente set fl_situacao_credito = '1' where cd_cliente = '51668'\")\n        .then((result) => {\n            console.log('Mudado para Controle de crédito Avista.')\n        })\n        .catch((err) => {\n            console.error('Erro ao inativar Cliente:', err);\n        })\n    // FAÇO LOGIN\n    tryTo(() => Login(CNPJ_CORRETO, SENHA_CORRETA))\n    //VOU NO CARRINHO E ADICIONO 50 ITENS POR UNIDADE E VOU PARA O CARRINHO \n    I.amOnPage(Pagina_Produto_08070_Wildfly1)\n    I.waitForText('08070', 20)\n    //ADICIONO ITEM NO CARRINHO\n    I.fillField('Quantidade', '50')\n    //ESPERO PELO VALOR NO CARRINHO\n    I.waitForText('230,86', 20)\n    //VOU PARA O CARRINHO\n    I.amOnPage(Pagina_Produto_08070_Wildfly1)\n    I.waitForText('08070', 20)\n    //VOU PARA O FIM DA PÁGINA.\n    I.scrollPageToBottom();\n    //CLICO EM FINALIZAR PEDIDO E ESPERO PELO TEXTO \"LIBERADO SOMENTE PARA COMPRAS Á VISTA.\"\n    I.click('FINALIZAR PEDIDO')\n    I.waitForText('Liberado somente para compras à vista.')",
              "err": {},
              "uuid": "a964bc5e-4004-48a4-8c3c-084ecdf2eca6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "a964bc5e-4004-48a4-8c3c-084ecdf2eca6"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "48ae6384-3241-429d-b077-613d67461e6c",
          "title": "E-commerce Bloqueado @EcommerceBloqueado",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\12-EcommerceBloqueado_test.js",
          "file": "\\steps\\12-EcommerceBloqueado_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "e21c1b2e-b0ce-428d-b5bd-be2d7c5b655a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "c9658c6f-9fe7-40e3-9b43-96597d2584ed",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "ba8494a8-2c65-4f75-ac7f-e170d726bd18",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: AfterSuite",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"after all\" hook: AfterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "3803635b-4998-4289-9540-03d914c5b13b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "9b5d4795-6cb5-4ce2-88ba-871453be4d5f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "2a3ec44a-463e-461d-9e63-e70e6f6b46e9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "E-Commerce Com flag Bloqueado",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado: E-Commerce Com flag Bloqueado",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESATIVO O CLIENTE\n    client.query(\"update cliente set fl_ecommerce  = '0' where cd_cliente = '51668'\")\n        .then((result) => {\n            console.log('Mudado o E-commerce para Bloqueado.')\n        })\n        .catch((err) => {\n            console.error('Erro ao mudar o E-commerce para Bloqueado:', err);\n        })\n    // FAÇO LOGIN\n    tryTo(() => Login(CNPJ_CORRETO, SENHA_CORRETA))\n    //AGUARDO PELA MENSAGEM \"SOLICITE LIBERAÇÃO DE USO DO E-COMMERCE\"\n    I.waitForText('Solicite liberação de uso do e-commerce.', 20)",
              "err": {},
              "uuid": "42ffb64e-a526-466b-b03d-9cbd06a71736",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "42ffb64e-a526-466b-b03d-9cbd06a71736"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "d613a5f8-4382-4749-9dd3-5a3807fabf72",
          "title": "E-commerce apenas orçamento @EcommerceOrcamento",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\13-EcommerceOrcamento_test.js",
          "file": "\\steps\\13-EcommerceOrcamento_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "bce97d2e-a950-40fe-8604-c3ab936f40f9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "464df679-6843-4546-9bc7-fb2568b114ce",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "5827f3ed-75f8-4f86-a961-6ab638ab47c0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: AfterSuite",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"after all\" hook: AfterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "991117bd-a63e-4978-b8e4-dc445b04632a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "28f76d6e-c09a-40a8-837a-cac792cd5e86",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "6cc4c1eb-2b2a-4b30-96d5-4d2090bb8016",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "E-Commerce com Flag apenas Orçamento",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento: E-Commerce com Flag apenas Orçamento",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESATIVO O CLIENTE\n    client.query(\"update cliente set fl_ecommerce  = '1' where cd_cliente = '51668'\")\n        .then((result) => {\n            console.log('Mudado o E-commerce para somente orçamento.')\n        })\n        .catch((err) => {\n            console.error('Erro ao mudar o E-commerce para somente orçamento:', err);\n        })\n    // FAÇO LOGIN\n    tryTo(() => Login(CNPJ_CORRETO, SENHA_CORRETA))\n    //AGUARDO PELO MENU INICIAL \n    I.waitForText('08070', 20)\n    //VOU PARA DENTRO DO PRODUTO.\n    I.amOnPage(Pagina_Produto_08070_Wildfly1)\n    I.waitForText('08070', 20)\n    //ADICIONO 50 ITENS NO PEDIDO\n    I.fillField('Quantidade', '50')\n    //NAO VEJO OS VALORES NO CARRINHO\n    I.dontSeeElement('/html/body/my-app/home-component/mat-toolbar/mat-toolbar-row[1]/div/div', 5);\n    I.wait(5)\n    //VOU PARA ABA FINALIZAR PEDIDO\n    I.amOnPage(Pagina_Carrinho_Finalizar_Wildfly1)\n    I.waitForText('08070', 10)\n    //VOU PARA O FIM DA PÁGINA.\n    I.scrollPageToBottom();\n    //CLICO EM SOLICITAR ORÇAMENTO\n    I.click('SOLICITAR ORÇAMENTO')\n    //ESPERO PELA MENSAGEM \"ORÇAMENTO SOLICITAR COM SUCESSO\"\n    I.waitForText('Orçamento solicitado com sucesso', 20)",
              "err": {},
              "uuid": "4b268e1a-517c-4bf6-82a9-bcba3f73f021",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "4b268e1a-517c-4bf6-82a9-bcba3f73f021"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "e19ce0e1-9bd2-4f84-82eb-67ef32281ca4",
          "title": "EncerrarBanco @EncerrarBanco",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\14-FecharBancoDeDados_test.js",
          "file": "\\steps\\14-FecharBancoDeDados_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "EncerrarBanco @EncerrarBanco \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "74590d13-a1a4-4b53-8204-eeb1c684ac0d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "EncerrarBanco @EncerrarBanco \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "b1c47eb6-0121-4d7c-a067-f4eb22430014",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "EncerrarBanco @EncerrarBanco \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "9187027c-13f4-4dcf-bf62-ed24da69cd2b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "EncerrarBanco @EncerrarBanco \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "f2eebb48-72c7-40d7-be26-7fc47e8777eb",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Encerrar conexão com o banco ",
              "fullTitle": "EncerrarBanco @EncerrarBanco: Encerrar conexão com o banco ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//FECHO A CONEXAO COM O BANCO DE DADOS\n    tryTo(() => {\n        client.end()\n            .then(() => {\n                console.log('Conexão encerrada.');\n            })\n            .catch((err) => {\n                console.error('Erro ao fechar a conexão com o banco de dados:', err);\n            });\n    });\n    await process.exit();",
              "err": {},
              "uuid": "2ee9a2fc-020e-445d-ae63-01e32fe0da1a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "2ee9a2fc-020e-445d-ae63-01e32fe0da1a"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {},
      "version": "6.2.0"
    }
  }
}