{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-02T17:57:06.189Z",
    "end": "2023-08-02T17:57:46.165Z",
    "duration": 39976,
    "testsRegistered": 34,
    "passPercent": 2.941176470588235,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 33,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "885e4242-d46c-4698-9f2a-b8e60472fa06",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9e7b922e-51b6-4d6c-af1d-6d102e610e32",
          "title": "login @Login",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\01-login_test.js",
          "file": "\\steps\\01-login_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "login @Login \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "ff8f286b-78f8-49da-804d-036c13717b2e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "login @Login \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "40821caf-2c45-4e2f-9276-4bf7100848d9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "login @Login \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "dccef41c-7802-4da7-9635-54cabe8a51e7",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "login @Login \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "a4e7a834-9453-44d0-a417-b1be04909715",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "login @Login \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "c2d2dbd7-49f1-4490-a9b2-e698edff6f54",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"Já Sou cliente\" @JaSouCliente",
              "fullTitle": "login @Login: Aba \"Já Sou cliente\" @JaSouCliente",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//EU VOU PARA PAGINA \"JÁ SOU CLIENTE\"\n  I.click('/html/body/my-app/login-component/div/div[1]/div/form/div[2]/button[1]')\n  //EU PREENCHO OS CAMPOS COM OS DADOS\n  I.fillField('Razão Social', Razao_Social)\n  I.fillField('CNPJ', CNPJ_CORRETO)\n  I.fillField('Telefone', Telefone)\n  I.fillField('E-mail', Email)\n  //EU APERTO O reCAPTCH PRA ENVIAR O FORMULARIO.\n  // \n  //\n  //",
              "err": {},
              "uuid": "13538365-802f-410a-ad5e-630ce250552c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"Quero ser cliente\" @QueroSerCliente",
              "fullTitle": "login @Login: Aba \"Quero ser cliente\" @QueroSerCliente",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//VOU PARA ABA \"QUERO SER CLIENTE\"\n  I.click('Quero ser cliente')\n  //EU PREENCHO OS CAMPOS COM OS DADOS\n  //ADICIONO A RAZAO SOCIAL\n  I.fillField('Razão Social', Razao_Social)\n  //ADICIONO O CNPJ\n  I.fillField('CNPJ', '0000000000000')\n  //ADICIONO O TELEFONE\n  I.fillField('Telefone', Telefone)\n  //ADICIONO A INSCRIÇÃO ESTADUAL \n  I.fillField('Inscrição Estadual', '120000000')\n  //ADICIONO O E-MAIL NFe\n  I.fillField('E-mail NFe', 'Email.nfeTeste@gmail.com')\n  //ADICIONO AO NOME FANTASIA \n  I.fillField('Nome Fantasia', Nome_Fantasia)\n  // //EU SELECIONO O ESTADO DO AMAZONAS\n  // I.click('UF')\n  // I.click('/html/body/div[1]/div[3]/div/div/mat-option[2]')\n  //DADOS DO FINANCEIRO\n  //ADICIONO O EMAIL DO FINANCEIRO\n  I.fillField(Email_Financeiro, Email)\n  //ADICIONO O NOME DO CONTADO DO FINANCEIRO\n  I.fillField(Nome_Contato_Financeiro, 'NomeFinanceiro')\n  //ADICIONO AO NUMERO DE TELEFONE DO FINANCEIRO\n  I.fillField(Numero_Financeiro, '48900000000')\n  //CLICO NO BOTAO \"AUTORIZADO A COMPRAR\"\n  I.click('Autorizado a comprar')\n  //DADOS DO COMPRAS\n  //ADICIONO O EMAIL DO COMPRAR\n  I.fillField(Email_Compras, Email)\n  //ADICIONO O NOME DO CONTADO DO COMPRAS\n  I.fillField(Nome_Contato_Compras, 'NomeCompras')\n  //ADICIONO AO NUMERO DE TELEFONE DO COMPRAR\n  I.fillField(Numero_compras, '48900000000')\n  //DOU UM SCROL PARA BAIXO \n  I.scrollPageToBottom()\n  //COLOCO ADICIONO OS FORNECEDORES ATUAIS\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[4]/div[8]/div[2]/input', 'FORNECEDOR TESTE ')\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[4]/div[8]/div[3]/input', ' FORNECEDOR TESTE ')\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[4]/div[8]/div[4]/input', 'FORNECEDOR TESTE ')\n  //ADICIONO NA AREA TEXTO OS ITENS QUE EU QUERO.\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[4]/div[10]/mat-form-field/div/div[1]/div/textarea', 'Maquinas de testes')\n  //ADICIONO QUAL O CANAL DE ATENDIMENTO \n  I.click('Quero comprar presencialmente pelo representante comercial')\n  I.click(' Quero comprar pelo televendas via WhatsApp, e-mail e telefone')\n  I.click('Quero comprar online pelo site ou aplicativo')\n  //DOU UM SCROL PARA BAIXO \n  I.scrollPageToBottom()\n  //SELECIONO QUAL REDE SOCIAL EU CONHECI A REZZADORI\n  I.click('Instagram')\n  I.click('Site')\n  I.click('Visita')\n  I.click('Google')\n  I.click('Indicação')\n  I.waitForText('Digite a indicação de como nos conheceu*')\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[7]/div[2]/mat-radio-group/div[5]/input', 'TESTE PELO GOOGLE')\n  I.click('Outro')\n  I.waitForText('Digite o outro meio de como nos conheceu*')\n  I.fillField('/html/body/my-app/cadastro-novo-cliente-component/div/div/div/form/div[1]/div[7]/div[2]/mat-radio-group/div[6]/input', 'TESTE PELO GOOGLE')\n  I.saveScreenshot('@QueroSerCliente.png')\n  //AQUI PRECISA VALIDAR O reCAPTCHA PRA PODER ENVIAR O FORMULARIO.\n  //\n  //\n  //\n  //",
              "err": {},
              "uuid": "e7c2f16f-ae99-4293-9c0f-261715675d0a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"Esqueci a senha\" @EsqueciMinhaSenha",
              "fullTitle": "login @Login: Aba \"Esqueci a senha\" @EsqueciMinhaSenha",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//VOU PARA ABA \"ESQUECI MINHA SENHA \"\n  I.click('Esqueci minha senha')\n  I.fillField('CNPJ', CNPJ_CORRETO)\n  I.fillField('E-mail', Email)\n  // PRECISA VALIDAR O reCAPTCHA AQUI\n  //\n  //\n  //",
              "err": {},
              "uuid": "cdcae0c4-7a1b-442d-ab3f-9fc27de5de1a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Login com CNPJ Inválido @LoginCNPJinvalido",
              "fullTitle": "login @Login: Login com CNPJ Inválido @LoginCNPJinvalido",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//FAÇO LOGIN COM CNPJ INVÁLIDO.\n  Login(CNPJ_INVALIDO, SENHA_CORRETA)\n  I.waitForText('Cliente não cadastrado.',50)\n  //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n  I.saveScreenshot('@LoginCNPJinvalido.png')",
              "err": {},
              "uuid": "aa34bfe9-fc87-4e08-8235-7941561a2ee3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Login com Senha Inválida @LoginSenhaInvalida",
              "fullTitle": "login @Login: Login com Senha Inválida @LoginSenhaInvalida",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//FAÇO LOGIN COM A SENHA INVALIDA.\n  Login(CNPJ_CORRETO, SENHA_INVALIDA)\n  I.waitForText('Senha inválida.',50)\n  I.saveScreenshot('@LoginSenhaInvalida.png')",
              "err": {},
              "uuid": "a6fcab50-f423-4ad7-94ae-b74ba569abf2",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Login Correto @LoginCorreto",
              "fullTitle": "login @Login: Login Correto @LoginCorreto",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//FAÇO LOGIN COM OS DADOS CORRETOS.\n  Login(CNPJ_CORRETO, SENHA_CORRETA)\n  I.waitForText('08070', 50)\n  I.saveScreenshot('@LoginCorreto.png')",
              "err": {},
              "uuid": "00da865d-cd8e-4e06-8710-94de1004b1a1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Logout @Logout",
              "fullTitle": "login @Login: Logout @Logout",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//FAÇO LOGIN COM OS DADOS CORRETOS.\n  Login(CNPJ_CORRETO, SENHA_CORRETA)\n  //ESPERO PELA ABA \"PRODUTOS\"\n  I.waitForText('08070', 50)\n  //CLICO NO BOTAO DE MENU \n  I.click('/html/body/my-app/home-component/mat-toolbar/mat-toolbar-row[1]/button')\n  //CLICO NO BOTAO SAIR\n  I.waitForText('SAIR', 50)\n  I.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav/mat-nav-list/a[7]/div')\n  //AGUARDO PELO INPUT \"CNPJ\" NA ABA LOGIN\n  I.waitForText('CNPJ', 50)\n  I.saveScreenshot('@Logout.png')",
              "err": {},
              "uuid": "dbf50e93-90da-403f-b213-9fcfbaea2858",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "13538365-802f-410a-ad5e-630ce250552c",
            "e7c2f16f-ae99-4293-9c0f-261715675d0a",
            "cdcae0c4-7a1b-442d-ab3f-9fc27de5de1a",
            "aa34bfe9-fc87-4e08-8235-7941561a2ee3",
            "a6fcab50-f423-4ad7-94ae-b74ba569abf2",
            "00da865d-cd8e-4e06-8710-94de1004b1a1",
            "dbf50e93-90da-403f-b213-9fcfbaea2858"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "7be8cf66-1c1a-4aba-9ae8-65d84a2a3d30",
          "title": "Pedido @Pedido",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\02-Pedido_test.js",
          "file": "\\steps\\02-Pedido_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Pedido @Pedido \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "22104df7-00c5-4953-8600-bf3ccb185f31",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Pedido @Pedido \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "82fdacdd-1c65-4471-b2ad-39a4bd6b509f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Pedido @Pedido \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "64d79724-ee2c-43bf-9e11-34e47249728b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Pedido @Pedido \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "334ce69a-c64b-4698-8549-88409b026ac9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Pedido @Pedido \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "5fb06098-3c25-4c60-9795-b0bf7d3ca5c0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"Inicial\" @AbaInicial",
              "fullTitle": "Pedido @Pedido: Aba \"Inicial\" @AbaInicial",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.resizeWindow(1920, 1080);\n    //NO PRODUTO \"ACABAMENTO CROMADO\" ADICIONO +5 PRODUTOS.\n    I.refreshPage();\n    I.wait(4)\n    I.amOnPage(Pagina_Produto_16410_Wildfly2)\n    I.waitForText('Quantidade', 20)\n    I.fillField('Quantidade', '5')\n    //ESPERO PELO VALOR DE 5 PEDIDOS ADICIONADOS NO CARRINHO\n    I.waitForText('237,25', 30)\n    //REMOVO 2 PEDIDOS \n    I.fillField('Quantidade', '3')\n    //ESPERO PELO VALOR DE APENAS 3 PEDIDOS ADICIONADOS NO CARRINHO\n    I.waitForText('142,35', 30)\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@AbaInicial.png')",
              "err": {},
              "uuid": "298d6bf6-8f94-4846-a5da-ca25a7cf289f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"Inicial\" Histórico - Pedidos já Comprados. @ItensJaComprados",
              "fullTitle": "Pedido @Pedido: Aba \"Inicial\" Histórico - Pedidos já Comprados. @ItensJaComprados",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CASO A ABA \"FILTROS\" ESTEJA FECHADO, IRÁ ABRIR.\n    tryTo(() => I.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav-content/div[1]/produtos-component/mat-sidenav-container/mat-sidenav-content/mat-toolbar/button'))\n    //CLICO NA FLAG \"ITENS JA COMPRADOS\"\n    I.click('ITENS JÁ COMPRADOS')\n    //ESPERO PELO PRODUTO JA COMPRADOS\n    tryTo(() => I.waitForText('08070', 20))\n    tryTo(() => I.waitForText(\"Nenhum item encontrado para estes filtros.\", 20))\n    //DESMARCO A FLAG\n    I.click('ITENS JÁ COMPRADOS')\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@ItensJaComprados.png')",
              "err": {},
              "uuid": "6716ce84-3d59-4cf4-b021-c89db4b4458c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"Inicial\" Filtros @Filtros",
              "fullTitle": "Pedido @Pedido: Aba \"Inicial\" Filtros @Filtros",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CASO A ABA \"FILTROS\" ESTEJA FECHADO, IRÁ ABRIR.\n    tryTo(() => I.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav-content/div[1]/produtos-component/mat-sidenav-container/mat-sidenav-content/mat-toolbar/button'))\n    //CLICO NA FLAG \"PROMOÇÃO\"\n    I.click('PROMOÇÃO')\n    //ESPERO PELO PRODUTO \"08070\"\n    I.waitForText('08070', 50)\n    //DESMARCO A FLAG \"\"\n    I.click('PROMOÇÃO')\n    //CLICO NA FLAG \"ABRAÇADEIRAS\"\n    I.click('ABRAÇADEIRAS')\n    //ESPERO PELO PRODUTO \"16687\"\n    I.waitForText('16687', 50)\n    //DESMARCO A FLAG \"ABRAÇADEIRAS\"\n    I.click('ABRAÇADEIRAS')\n    //CLICO NA FLAG \"ACESSÓRIOS CAIXA ACOPLADA\"\n    I.click('ACESSÓRIOS CAIXA ACOPLADA')\n    //ESPERO PELO PRODUTO \"17331\"\n    I.waitForText('17331', 50)\n    //DESMARCO A FLAG \"ACESSÓRIOS CAIXA ACOPLADA\"\"\n    I.click('ACESSÓRIOS CAIXA ACOPLADA')\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@Filtros.png')",
              "err": {},
              "uuid": "39b7bd99-e6a6-41f2-895f-bfd111241474",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"CARRINHO\" Continuar comprando @AbaContinuarComprando",
              "fullTitle": "Pedido @Pedido: Aba \"CARRINHO\" Continuar comprando @AbaContinuarComprando",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ADICIONO 2 ITENS E VOU PARA O CARRINHO\n    pedido.CriarPedido();\n    //VOU PARA BAIXO \n    I.scrollPageToBottom();\n    //CLICO NO BOTAO \"CONTINUAR COMPRANDO\"\n    I.click('CONTINUAR COMPRANDO')\n    //AGUARDO IR PARA O MENU INICIAL\n    I.wait(1)\n    //VOU PARA CIMA \n    I.scrollPageToTop();\n    //ESPERO VER O PRODUTO \"08070\"\n    I.waitForText('08070', 50)\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@AbaContinuarComprando.png')",
              "err": {},
              "uuid": "3491e778-e83c-4aae-ade9-1356cc68ae66",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"CARRINHO\" Solicitar Orçamento @SolicitarOrcamento",
              "fullTitle": "Pedido @Pedido: Aba \"CARRINHO\" Solicitar Orçamento @SolicitarOrcamento",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//REALIZO O PEDIDO E VOU PARA O CARRINHO.\n    pedido.CriarPedido();\n    //VOU PARA BAIXO \n    I.scrollPageToBottom();\n    //CLICO NO BOTAO \"SOLICITAR ORÇAMENTO\"\n    I.click('SOLICITAR ORÇAMENTO')\n    //ESPERO PELA MENSAGEM \"ORÇAMENTO SOLICITADO\"\n    I.waitForText('Orçamento solicitado com sucesso', 50)\n    //CLICO NO BOTAO \"SOLICITAR NOVO ORÇAMENTO\"\n    I.click('SOLICITAR NOVO ORÇAMENTO')\n    //ESPERO PELO ITEM NO MENU INICIAL\n    I.waitForText('08070', 50)\n    //VOU PARA ABA \"PEDIDOS\" E VEJO SE MOSTRA O PEDIDO FEITO ANTERIORMENTE \n    I.amOnPage(Pagina_Historico_Pedido_Wildfly2)\n    I.waitForText('237,25', 50)\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@SolicitarOrcamento.png')",
              "err": {},
              "uuid": "48874df8-7e95-4c5b-a62f-2b04ce36a2db",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"CARRINHO\" Finalizar pedido @AbaCarrinhoFinalizarPedido",
              "fullTitle": "Pedido @Pedido: Aba \"CARRINHO\" Finalizar pedido @AbaCarrinhoFinalizarPedido",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//REALIZO O PEDIDO E VOU PARA O CARRINHO.\n    pedido.CriarPedido();\n    //VOU PARA BAIXO \n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"AVISTA\"\n    I.click('Forma Pgto.')\n    I.click('//*[@id=\"mat-option-0\"]')\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VOU PARA ABA \"PEDIDOS\" E VEJO SE MOSTRA O PEDIDO FEITO ANTERIORMENTE \n    I.amOnPage(Pagina_Historico_Pedido_Wildfly2)\n    I.waitForText('237,25', 50)\n    //SALVO UMA PRINTSCREEN APENAS PARA IR PRO OUTPUT, CASO EU QUEIRA VERIFICAR O PASSO A PASSO\n    I.saveScreenshot('@AbaCarrinhoFinalizarPedido.png')",
              "err": {},
              "uuid": "798a73e0-d904-4d46-ba23-d76741ae3d7f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "298d6bf6-8f94-4846-a5da-ca25a7cf289f",
            "6716ce84-3d59-4cf4-b021-c89db4b4458c",
            "39b7bd99-e6a6-41f2-895f-bfd111241474",
            "3491e778-e83c-4aae-ade9-1356cc68ae66",
            "48874df8-7e95-4c5b-a62f-2b04ce36a2db",
            "798a73e0-d904-4d46-ba23-d76741ae3d7f"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "fc506e85-16ca-4be6-ac76-8530239211d5",
          "title": "Carrinho Dentro Do Item @CarrinhoDentroDoItem",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\03-CarrinhoDentroDoItem_test.js",
          "file": "\\steps\\03-CarrinhoDentroDoItem_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "df4e14af-1889-42b5-a8a8-5dba8c512326",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "f0355c09-78f2-4800-8574-63d0630c4f14",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "209409ff-1675-4157-8838-b312b0eacc7d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "d77ef355-86d9-465e-a67f-bc24eeabba9f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "4a5f6b6e-7723-4c76-8911-9dc8d9fd8f54",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"Carrinho\" Dentro do item - Finalizar Pedido @DentroDoItem",
              "fullTitle": "Carrinho Dentro Do Item @CarrinhoDentroDoItem: Aba \"Carrinho\" Dentro do item - Finalizar Pedido @DentroDoItem",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//EU CLICO NO ITEM QUE QUERO COMPRAR\n    I.click('08070')\n    //ESPERO PELO CODIGO DO PRODUTO CORRETO 3387\n    I.waitForText('Código: 08070', 50)\n    //VALIDAÇÃO\n    \n    //VALIDO A FICHA TECNICA DO PRODUTO.\n    I.waitForText('Ficha técnica')\n    I.waitForText('Pino adaptador com 3 saidas 2p+T (padrão novo). Não indicado adaptar vários pinos juntos devido a sobrecarga de tensão.')\n    I.waitForText('Atende as normas NBR NM 60884-1 e NBR 14136.')\n    //  ESCOLHO SE EU QUERO \"CX\" OU \"UN\"\n    I.click('CX')\n    //ADICIONO 4  ITEM POR QUANTIDADE \n    I.fillField('Quantidade', '4')\n    \n    //VALIDAÇÃO\n    I.waitForText('320,00', 50)\n    I.waitForText('Vl. Total (IPI + ST + FCP): R$ 320,00', 5)\n    //CLICO EM FINALIZAR PEDIDO\n    I.click('FINALIZAR PEDIDO')\n    //VOU PARA BAIXO \n    I.scrollPageToBottom();\n    //EU ESCOLHO A FORMA DE PAGAMENTO AVISTA\n    pedido.PagamentoAvista();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Pedido Finalizado', 30)\n    // /VOU PARA ABA \"PEDIDOS\" E VEJO SE MOSTRA O PEDIDO FEITO ANTERIORMENTE \n    I.amOnPage(Pagina_Historico_Pedido_Wildfly2)\n    //VALIDAÇÃO\n    I.waitForText('320', 50)",
              "err": {},
              "uuid": "698ce8ca-0659-41c1-bf2d-f83256228cc0",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "698ce8ca-0659-41c1-bf2d-f83256228cc0"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "de31f362-48a8-44b7-8f3a-3dd257c10e54",
          "title": "Finalizar Pedido @FinalizarPedido",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\04-FinalizarPedido_test.js",
          "file": "\\steps\\04-FinalizarPedido_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Finalizar Pedido @FinalizarPedido \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "53e6722b-af74-405d-b2c2-de0a215cdd38",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Finalizar Pedido @FinalizarPedido \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "4f25b7d1-e54b-4330-84b7-e6e9590e7c22",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Finalizar Pedido @FinalizarPedido \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "9ef58394-7ad9-45f1-982b-2a4ee26cacea",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Finalizar Pedido @FinalizarPedido \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "99e1274c-0d6d-4e0c-9c49-8c0a1c70b428",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Finalizar Pedido @FinalizarPedido \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "b4ed9541-42d5-4ce5-be04-fbb1fbc670ed",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"FINALIZAR\" Validar valores do carrinho @AbaFinalizarValidarValoresCarrinho",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" Validar valores do carrinho @AbaFinalizarValidarValoresCarrinho",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA DOIS PRODUTOS DIFERENTES NO CARRINHO.\n    pedido.AdicionarDoisProdutosNoCarrinho();\n    I.scrollPageToTop();\n    // VALIDAÇÃO DOS VALORES E PRODUTO DO CARRINHO CONFORME OS PEDIDOS\n    I.waitForText('241,25', 50)\n    I.waitForText('4,00', 50)\n    I.waitForText('237,25', 50)",
              "err": {},
              "uuid": "6a8e3ae5-92bb-4df5-805c-d0de4fa5662c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" Validar Remoção de um produto @AbaFinalizarValidarRemocaoCarrinho",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" Validar Remoção de um produto @AbaFinalizarValidarRemocaoCarrinho",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA DOIS PRODUTOS DIFERENTES NO CARRINHO.\n    pedido.AdicionarDoisProdutosNoCarrinho();\n    //EU REMOVO O PRIMEIRO ITEM \"17351 - ACABAMENTO MONOCOMANDO CHUVEIRO NEXUS 3/4POL CROMADO DOCOL\"\n    I.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav-content/div[1]/carrinho-component/div/ul/li[1]/div/div[2]/button')\n    //VALIDAÇÃO DOS VALORES E PRODUTO DO CARRINHO CONFORME FOI REMOVIDO 1 ITEM.\n    I.waitForText('Total: R$ 237,25', 50)\n    I.waitForText('47,45', 50)",
              "err": {},
              "uuid": "13ca21b4-3e5b-4e3c-b8c5-75a1b54bc116",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\"  ENTREGA - Endereço de Entrega PRINCIPAL @AbaFinalizarEntregaEnderecoPrincipal",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\"  ENTREGA - Endereço de Entrega PRINCIPAL @AbaFinalizarEntregaEnderecoPrincipal",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA DOIS PRODUTOS DIFERENTES NO CARRINHO.\n    pedido.AdicionarDoisProdutosNoCarrinho();\n    I.click('Endereço de Entrega')\n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"AVISTA\"\n    pedido.PagamentoAvista();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Pedido Finalizado', 50)",
              "err": {},
              "uuid": "a861e5d8-548f-4dd3-aa88-d7274121dfdb",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\"  ENTREGA - Endereço de Entrega SECUNDÁRIO @AbaFinalizarEntregaEnderecoSecundario",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\"  ENTREGA - Endereço de Entrega SECUNDÁRIO @AbaFinalizarEntregaEnderecoSecundario",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA DOIS PRODUTOS DIFERENTES NO CARRINHO.\n    pedido.AdicionarDoisProdutosNoCarrinho();\n    //TROCO PARA O ENDEREÇO SECUNDÁRIO.\n    I.click('Endereço de Entrega')\n    I.wait(2)\n    I.click('ALTERAR')\n    I.wait(2)\n    I.click('SELECIONAR')\n    I.waitForText('RUA HELIO ESTEFANO BECKER , 1 (TESTE)', 50)\n    I.waitForText('REAL PARQUE, SAO JOSE - 88113460', 50)\n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"AVISTA\"\n    pedido.PagamentoAvista();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Pedido Finalizado', 50)",
              "err": {},
              "uuid": "e511a41d-fcce-4b1e-8d0a-c04418d666c3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" ENTREGA - Retirada Balcao @AbaFinalizarEntregaRetiradaBalcao",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" ENTREGA - Retirada Balcao @AbaFinalizarEntregaRetiradaBalcao",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA DOIS PRODUTOS DIFERENTES NO CARRINHO.\n    pedido.AdicionarDoisProdutosNoCarrinho();\n    I.click('Retirada no Balcão')\n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"AVISTA\"\n    pedido.PagamentoAvista();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Pedido Finalizado', 50)",
              "err": {},
              "uuid": "f1922a66-6f86-42e0-bbc1-c91fd9bc1667",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" AVISTA - VALOR ABAIXO DE 200 @AbaFinalizarAvistaValorAbaixo",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" AVISTA - VALOR ABAIXO DE 200 @AbaFinalizarAvistaValorAbaixo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONO APENAS UM PRODUTO COM O VALOR DE 50, ABAIXO O PEDIDO MINIMO.\n    pedido.CriarPedidoAbaixoDe200();\n    I.click('Retirada no Balcão')\n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"AVISTA\"\n    pedido.PagamentoAvista();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    // // CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Parcela 1(100%) abaixo valor mínimo (R$200.00).', 50)",
              "err": {},
              "uuid": "21f8999e-0af3-48fb-a4a0-e19aaee6f380",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" BOLETO - VALOR ABAIXO DE 100 @FinalizarBoletoValorAbaixo",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" BOLETO - VALOR ABAIXO DE 100 @FinalizarBoletoValorAbaixo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONO APENAS UM PRODUTO COM O VALOR DE 50, ABAIXO O PEDIDO MINIMO.\n    pedido.CriarPedidoAbaixoDe100();\n    I.click('Retirada no Balcão')\n    I.scrollPageToBottom();\n    //ESCOLHO A FORMA DE PAGAMENTO \"BOLETO ITAU\"\n    pedido.PagamentoBoleto();\n    //ESCREVO UMA OBSERVAÇÃO \n    I.fillField('Observação', 'TESTE TESTE TESTE')\n    //CLICO NO BOTAO \"FINALIZAR PEDIDO\"\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Parcela 1(100%) abaixo valor mínimo (R$100.00).', 50)",
              "err": {},
              "uuid": "b46f74d0-f7b3-4415-af98-4fb74d2922cd",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" Continuar Comprando @AbaFinalizarContinuarComprando",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" Continuar Comprando @AbaFinalizarContinuarComprando",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA PEDIDOS NO CARRINHO, E ME DEIXA ESCOLHER SE QUERO REALIZAR ORÇAMENTO,FINALIZAR OU CONTINUAR A COMPRA.\n    pedido.PedidoQuaseCompleto();\n    I.click('CONTINUAR COMPRANDO')\n    I.scrollPageToTop();\n    //VALIDAÇÃO\n    I.waitForText('08070', 50)",
              "err": {},
              "uuid": "3ef45532-b827-4cd4-b029-373cb5cbd061",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" Finalizar Pedido @AbaFinalizarFinalizarPedido",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" Finalizar Pedido @AbaFinalizarFinalizarPedido",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA PEDIDOS NO CARRINHO, E ME DEIXA ESCOLHER SE QUERO REALIZAR ORÇAMENTO,FINALIZAR OU CONTINUAR A COMPRA.\n    pedido.PedidoQuaseCompleto();\n    I.click('FINALIZAR PEDIDO')\n    //VALIDAÇÃO\n    I.waitForText('Pedido Finalizado', 50)",
              "err": {},
              "uuid": "b9abbc41-fc78-443d-a3fa-c4294c2248d6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Aba \"FINALIZAR\" Solicitar Orçamento @AbaFinalizarSolicitarOrcamento",
              "fullTitle": "Finalizar Pedido @FinalizarPedido: Aba \"FINALIZAR\" Solicitar Orçamento @AbaFinalizarSolicitarOrcamento",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//ESSE METODO ADICIONA PEDIDOS NO CARRINHO, E ME DEIXA ESCOLHER SE QUERO REALIZAR ORÇAMENTO,FINALIZAR OU CONTINUAR A COMPRA.\n    pedido.PedidoQuaseCompleto();\n    I.click('SOLICITAR ORÇAMENTO')\n    //VALIDAÇÃO\n    I.waitForText('Obrigado por cotar conosco. Para aprovar sua cotação entre em contato com seu representante no fone (49) 3331-0600.', 5)",
              "err": {},
              "uuid": "f6d80a8c-cacb-4ef8-aece-0327e36e0ba9",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "6a8e3ae5-92bb-4df5-805c-d0de4fa5662c",
            "13ca21b4-3e5b-4e3c-b8c5-75a1b54bc116",
            "a861e5d8-548f-4dd3-aa88-d7274121dfdb",
            "e511a41d-fcce-4b1e-8d0a-c04418d666c3",
            "f1922a66-6f86-42e0-bbc1-c91fd9bc1667",
            "21f8999e-0af3-48fb-a4a0-e19aaee6f380",
            "b46f74d0-f7b3-4415-af98-4fb74d2922cd",
            "3ef45532-b827-4cd4-b029-373cb5cbd061",
            "b9abbc41-fc78-443d-a3fa-c4294c2248d6",
            "f6d80a8c-cacb-4ef8-aece-0327e36e0ba9"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "14816b6f-2afb-4f45-acf6-a28d0e893727",
          "title": "Pedidos Historico @PedidosHistorico",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\05-Pedidos-Historico_test.js",
          "file": "\\steps\\05-Pedidos-Historico_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Pedidos Historico @PedidosHistorico \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "ba0ec869-9ed7-4791-9c5e-9bc1e1d75db8",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Pedidos Historico @PedidosHistorico \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "a063f18f-f404-4419-98d6-580a7bf77917",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Pedidos Historico @PedidosHistorico \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "f27e583b-1c4b-4c0f-b2fb-4abeb8986ae7",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Pedidos Historico @PedidosHistorico \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "37fdf2e1-604a-4418-ae4d-739b7a05598b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Pedidos Historico @PedidosHistorico \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "bc913394-2e55-47a9-91c0-3e0cd02d0da8",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"Pedidos\" Detalhes @PedidosDetalhes",
              "fullTitle": "Pedidos Historico @PedidosHistorico: Aba \"Pedidos\" Detalhes @PedidosDetalhes",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CLICO EM \"PEDIDOS\"\nI.wait(2)\nI.amOnPage(Pagina_Historico_Pedido_Wildfly2)\nI.wait(5)\n//CLICO EM \"DETALHES\"\nI.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav-content/div[1]/historico-component/div/mat-table/mat-row[1]/mat-cell[9]/a')\n//ESPERO PELAS MENSAGENS CORRETAS.\nI.waitForText('AVISTA',50)\nI.waitForText('241,25',50)\nI.waitForText('16410',50)\nI.waitForText('08070',50)\nI.waitForText('Forma Pgto: DINHEIRO',50)",
              "err": {},
              "uuid": "34b401c4-f2e8-4b6a-bc35-24c262fd31db",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "34b401c4-f2e8-4b6a-bc35-24c262fd31db"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "29de9b10-572d-4ba7-925f-2ee034d17648",
          "title": "Financeiro Historico @FinanceiroHistorico",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\06-Financeiro-Historico_test.js",
          "file": "\\steps\\06-Financeiro-Historico_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "809651a8-cb06-480c-bd8f-b93e8d524edc",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "88a2ca7f-9a0b-4c83-9cfb-1abb97a7fc74",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "562f2320-75b8-465c-88ee-62c10bb186c3",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "19dbfb97-c27c-402c-9eb4-f58a71a6253b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "0465752c-611a-4757-8985-880da38135f6",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Aba \"Financeiro\" Detalhes @FinanceiroDetalhes",
              "fullTitle": "Financeiro Historico @FinanceiroHistorico: Aba \"Financeiro\" Detalhes @FinanceiroDetalhes",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.wait(2)\n//VOU PARA A ABA \"FINANCEIRO\"\nI.amOnPage(Pagina_Historico_Financeiro_Wildfly2)\nI.waitForText('DETALHES',50)\n//CLICO EM \"DETALHES\"\nI.click('/html/body/my-app/home-component/mat-sidenav-container/mat-sidenav-content/div[1]/historico-financeiro/div/mat-table/mat-row[1]/mat-cell[6]/a')\n//ESPERO PELAS MENSAGENS\nI.waitForText('Detalhes',20)\nI.waitForText('Código filial: 1',20)\nI.waitForText('Código Cliente: 2241',20)\nI.waitForText('Nr documento: 512034',20)\nI.waitForText('Data emissão: 03/08/2021',20)\nI.waitForText('Linha digitavel: 00190.00009 01526.510001 00467.475174 4 87290000014830',20)\nI.waitForText('Valor nominal: R$ 148,30',20)\nI.waitForText('Chave de Acesso NFe: 42210875384404000125550040005120341116285150',20)\nI.waitForText('Situação: Quitado',20)\nI.waitForText('Forma de pagamento: BOLETO BANCO DO BRASIL',20)\nI.waitForText('Nosso número: 0000467475',20)\nI.waitForText('Número documento: 512034-1',20)\nI.waitForText('Valor saldo: R$ 0,00',20)",
              "err": {},
              "uuid": "80e9771e-8dfa-4b8f-8b10-450169ecb444",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "80e9771e-8dfa-4b8f-8b10-450169ecb444"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "b9ca532d-119f-4c23-8b5a-9acd508eaec1",
          "title": "Senhas @Senhas",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\07-Senha_test.js",
          "file": "\\steps\\07-Senha_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Senhas @Senhas \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "0c05ffa8-1c8a-4038-aeb3-3422acf3f911",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Senhas @Senhas \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "ea5238aa-bd67-4d6f-bef3-3a0f5146c480",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Senhas @Senhas \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "23c8a44d-e12f-4761-a8cc-2e2accca13ae",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Senhas @Senhas \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "539408fc-a89d-4324-8eea-5508244e66c1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Senhas @Senhas \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "9bbbd72e-8cbb-4ca1-a3e4-f3055e263390",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Trocar Senha @TrocarSenha",
              "fullTitle": "Senhas @Senhas: Trocar Senha @TrocarSenha",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CLICO PRA ABRIR O MENU PARA ALTERAR A SENHA\n    I.click('/html/body/my-app/home-component/mat-toolbar/mat-toolbar-row[1]/button')\n    I.click('ALTERAR')\n    I.fillField('Senha Antiga','48303523')\n    I.fillField('Senha Nova','Flex48303523')\n    I.fillField('Confirme a nova senha','Flex48303523')\n    I.click('ALTERAR')\n    //VALIDAÇÃO\n    I.waitForText('Senha alterada com sucesso',30)\n    Login(CNPJ_CORRETO, SENHA_ALTERADA);\n    I.waitForText('08070', 50)\n    //CLICO PRA ABRIR O MENU PARA ALTERA A SENHA PARA A ANTERIOR \n    I.click('/html/body/my-app/home-component/mat-toolbar/mat-toolbar-row[1]/button')\n    I.click('ALTERAR')\n    I.fillField('Senha Antiga','Flex48303523')\n    I.fillField('Senha Nova','48303523')\n    I.fillField('Confirme a nova senha','48303523')\n    I.click('ALTERAR')\n    \n    //VALIDAÇÃO\n    I.waitForText('Senha alterada com sucesso',50)",
              "err": {},
              "uuid": "27019180-f7d0-41f6-aa97-016a19cf165c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "27019180-f7d0-41f6-aa97-016a19cf165c"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "c27eb442-7ffb-4e49-828a-d4b3a93135a3",
          "title": "Versao Aplicativo @VersaoAplicativo",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\08-VersaoAplicativo_test.js",
          "file": "\\steps\\08-VersaoAplicativo_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "6dd7da7c-6b09-4dc2-91f1-59de40903c40",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "c7460d24-639a-4c63-8b3f-22c8cce9c842",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "bdaf467a-d548-4f32-8d35-1cb6bd70cd4d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "7bb37829-8e99-469b-9827-2385b40324de",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "e32b7995-894e-43c6-b545-a860f6ee5644",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Versao Aplicativo @VersaoAplicativo",
              "fullTitle": "Versao Aplicativo @VersaoAplicativo: Versao Aplicativo @VersaoAplicativo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CLICO NO MENU \n    I.click('/html/body/my-app/home-component/mat-toolbar/mat-toolbar-row[1]/button')\n    \n    //CLICO EM \"VERSAO MÓVEL\"\n    I.click('VERSÃO MÓVEL')\n    \n    //AQUI NAO DA PRA VALIDAR A PAGINA DO GOOGLE STORE",
              "err": {},
              "uuid": "b8107d41-cd9d-45e5-ae3b-d86059f32207",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b8107d41-cd9d-45e5-ae3b-d86059f32207"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "9b310054-7588-45a0-a99c-8c6c0027a9ae",
          "title": "ClienteInativo @ClienteInativo",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\09-ClienteInativo_test.js",
          "file": "\\steps\\09-ClienteInativo_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "ClienteInativo @ClienteInativo \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "35dbf543-9583-42cc-8f14-680ef5ef4046",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "ClienteInativo @ClienteInativo \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "669820e0-014b-4ae9-a117-e7bc63622496",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "ClienteInativo @ClienteInativo \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "1d06582a-1462-49cb-81b7-2cdf406ed5b7",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: AfterSuite",
              "fullTitle": "ClienteInativo @ClienteInativo \"after all\" hook: AfterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "7188782b-c0e8-4c29-8121-2ca1135b61ad",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "ClienteInativo @ClienteInativo \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "66837666-309f-4ccb-838b-905092d321fe",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "ClienteInativo @ClienteInativo \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "96510383-8e9e-426c-bdec-e87f12d3e57d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Cliente Inativo @ClienteInativo",
              "fullTitle": "ClienteInativo @ClienteInativo: Cliente Inativo @ClienteInativo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESATIVO O CLIENTE\n    client.query(\"UPDATE CLIENTE SET FL_ATIVO = 'N' WHERE cd_cliente = '51668';\")\n        .then((result) => {\n            console.log('Cliente inativado')\n        })\n        .catch((err) => {\n            console.error('Erro ao inativar Cliente:', err);\n        })\n    // FAÇO LOGIN\n    tryTo(() => Login(CNPJ_CORRETO, SENHA_CORRETA))\n    // ESPERO PELA MENSAGEM DE ERRO. \"CLIENTE INATIVO.\"\n    I.waitForText('Cliente inativo.', 50)",
              "err": {},
              "uuid": "5660a960-83df-4cd0-b3ac-91fabb7b0811",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "5660a960-83df-4cd0-b3ac-91fabb7b0811"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "6ddc4446-f1bb-4818-b762-7863a0d0429c",
          "title": "Controle de Credito Bloqueado @CtcBloqueado",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\10-ControleDeCreditoBloqueado_test.js",
          "file": "\\steps\\10-ControleDeCreditoBloqueado_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "d10a8ad0-8894-49bf-b7fa-8423245ddce9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "b51f6f87-d3f7-4af8-9d90-d5dc1aef1acc",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "648e1ce8-00e2-4ee8-97cc-96054b231207",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: AfterSuite",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"after all\" hook: AfterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "3a2047a8-47df-4bfc-8252-78930927b195",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "a14f558f-6883-456e-b3ad-29adceed454c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "f4a5cb83-f1a9-4cf7-a53b-2179c589456e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Controle de crédito Bloqueado ",
              "fullTitle": "Controle de Credito Bloqueado @CtcBloqueado: Controle de crédito Bloqueado ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESATIVO O CLIENTE\n    client.query(\" update cliente set fl_situacao_credito = '0' where cd_cliente = '51668'\")\n        .then((result) => {\n            console.log('Mudado para Controle de crédito bloqueado.')\n        })\n        .catch((err) => {\n            console.error('Erro ao inativar Cliente:', err);\n        })\n    // FAÇO LOGIN\n    tryTo(() => Login(CNPJ_CORRETO, SENHA_CORRETA))\n    // ESPERO PELA MENSAGEM DE ERRO. \"CLIENTE NAO LIBERADO PELO FINANCEIRO\"\n    I.waitForText('Cliente não liberado pelo financeiro.', 50)",
              "err": {},
              "uuid": "6f9b3812-1eb6-482e-99d4-be9b74b3d0d2",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "6f9b3812-1eb6-482e-99d4-be9b74b3d0d2"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "838a1bd7-0b74-4941-9c8b-e106a2c0b07f",
          "title": "Controle de Credito Avista @CtcAvista",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\11-ControleDeCreditoAvista_test.js",
          "file": "\\steps\\11-ControleDeCreditoAvista_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "a0d7c840-9e1d-4371-a23d-7f765511f7bb",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "16e3093f-d436-4d32-8427-ded90c535e4e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "b1763e6e-af0a-472b-8135-31ac2d8dd354",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: AfterSuite",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"after all\" hook: AfterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "ff626ae6-8a89-4a5f-8974-6a3626d2e18a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "b526029d-69b5-4af6-848d-e6d9e7cb0bd6",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Controle de Credito Avista @CtcAvista \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "0006bab0-e32b-4579-8791-1eb3b84dd15a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Controle de crédito Avista",
              "fullTitle": "Controle de Credito Avista @CtcAvista: Controle de crédito Avista",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESATIVO O CLIENTE\n    client.query(\" update cliente set fl_situacao_credito = '1' where cd_cliente = '51668'\")\n        .then((result) => {\n            console.log('Mudado para Controle de crédito Avista.')\n        })\n        .catch((err) => {\n            console.error('Erro ao inativar Cliente:', err);\n        })\n    // FAÇO LOGIN\n    tryTo(() => Login(CNPJ_CORRETO, SENHA_CORRETA))\n    //VOU NO CARRINHO E ADICIONO 50 ITENS POR UNIDADE E VOU PARA O CARRINHO \n    I.amOnPage(Pagina_Produto_08070_Wildfly2)\n    I.waitForText('08070', 50)\n    //ADICIONO ITEM NO CARRINHO\n    I.fillField('Quantidade', '50')\n    //ESPERO PELO VALOR NO CARRINHO\n    I.waitForText('230,86', 50)\n    //VOU PARA O CARRINHO\n    I.amOnPage(Pagina_Carrinho_Finalizar_Wildfly2)\n    I.waitForText('08070', 50)\n    //VOU PARA O FIM DA PÁGINA.\n    I.scrollPageToBottom();\n    //CLICO EM FINALIZAR PEDIDO E ESPERO PELO TEXTO \"LIBERADO SOMENTE PARA COMPRAS Á VISTA.\"\n    I.click('FINALIZAR PEDIDO')\n    I.waitForText('Liberado somente para compras à vista.')",
              "err": {},
              "uuid": "14b472e6-10b5-4240-99fc-85ddb7340548",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "14b472e6-10b5-4240-99fc-85ddb7340548"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "7b770d83-8c03-451b-b255-5462b3768998",
          "title": "E-commerce Bloqueado @EcommerceBloqueado",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\12-EcommerceBloqueado_test.js",
          "file": "\\steps\\12-EcommerceBloqueado_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "4dee7cbc-0c6e-4bcb-bb76-caa1004a7102",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "40d0be40-b896-40b6-968c-b2240357885b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"before each\" hook: Before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "5db43558-aa9d-4b69-b007-ae7873255149",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: AfterSuite",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"after all\" hook: AfterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nthis.test.body = fn.toString();\nif (!recorder.isRunning()) {\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nconst opts = suite.opts || {};\nconst retries = opts[`retry${ucfirst(hookName)}`] || 0;\npromiseRetry(async (retry, number) => {\n  try {\n    recorder.startUnlessRunning();\n    await fn.call(this, getInjectedArguments(fn));\n    await recorder.promise().catch(err => retry(err));\n  } catch (err) {\n    retry(err);\n  } finally {\n    if (number < retries) {\n      recorder.stop();\n      recorder.start();\n    }\n  }\n}, { retries })\n  .then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });",
              "err": {},
              "uuid": "0680d971-40aa-4a8b-87af-5d3259059744",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "e32e1646-bd22-4596-847a-7db2f8022c6c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "9e47ce01-65c3-42a3-ba96-d305bc9e1dac",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "E-Commerce Com flag Bloqueado",
              "fullTitle": "E-commerce Bloqueado @EcommerceBloqueado: E-Commerce Com flag Bloqueado",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESATIVO O CLIENTE\n    client.query(\"update cliente set fl_ecommerce  = '0' where cd_cliente = '51668'\")\n        .then((result) => {\n            console.log('Mudado o E-commerce para Bloqueado.')\n        })\n        .catch((err) => {\n            console.error('Erro ao mudar o E-commerce para Bloqueado:', err);\n        })\n    // FAÇO LOGIN\n    tryTo(() => Login(CNPJ_CORRETO, SENHA_CORRETA))\n    //AGUARDO PELA MENSAGEM \"SOLICITE LIBERAÇÃO DE USO DO E-COMMERCE\"\n    I.waitForText('Solicite liberação de uso do e-commerce.', 20)",
              "err": {},
              "uuid": "75946c0d-2872-47a2-ac13-e39fdb33acf4",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "75946c0d-2872-47a2-ac13-e39fdb33acf4"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "7d753d4e-bf07-4446-ae35-9006916c5c36",
          "title": "E-commerce apenas orçamento @EcommerceOrcamento",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\13-EcommerceOrcamento_test.js",
          "file": "\\steps\\13-EcommerceOrcamento_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"before all\" hook: codeceptjs.beforeSuite in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "timedOut": false,
              "duration": 2602,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "eee9889e-5650-45e9-8cea-e5e5a92d0ac7",
              "parentUUID": "7d753d4e-bf07-4446-ae35-9006916c5c36",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"before each\" hook: codeceptjs.before in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "e7e137b7-6fc2-4caa-81d5-3601b818d860",
              "parentUUID": "7d753d4e-bf07-4446-ae35-9006916c5c36",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Before in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"before each\" hook: Before in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//AQUI SEMPRE ELE DA O COMANDO SQL PARA DEIXAR A DESCRICAO 1 E NAO FECHO A CONEXAO\n    client.connect()\n        .then(() => {\n            console.log('Conexão estabelecida com sucesso!');\n        })\n        .catch((err) => {\n            console.error('Erro ao conectar ao banco de dados:', err);\n        });",
              "err": {},
              "uuid": "a8250ec0-e802-48d0-8b1f-a1390cf3f2d2",
              "parentUUID": "7d753d4e-bf07-4446-ae35-9006916c5c36",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"after all\" hook: codeceptjs.afterSuite in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "timedOut": false,
              "duration": 14,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "8d8f069c-c4a5-454e-9e7d-db3e661384d5",
              "parentUUID": "7d753d4e-bf07-4446-ae35-9006916c5c36",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: After in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"after each\" hook: After in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ATIVO O CLIENTE\n    client.query(\"update cliente set fl_ecommerce  = '2' where cd_cliente = '51668'\")\n        .then((result) => {\n            console.log(' Trocado para Pedido/orçamento')\n        })\n        .catch((err) => {\n            console.error('Erro ao trocar para Trocado para Pedido/orçamento:', err);\n        })\n    // //ABRO O REPORTER\n    // AbrirAllure();",
              "err": {},
              "uuid": "6bd39469-5e89-40c5-8f51-37bc9eba9699",
              "parentUUID": "7d753d4e-bf07-4446-ae35-9006916c5c36",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento \"after each\" hook: finalize codeceptjs in \"E-commerce apenas orçamento @EcommerceOrcamento\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "eada87f1-0d50-4e30-8085-69bf75437a0a",
              "parentUUID": "7d753d4e-bf07-4446-ae35-9006916c5c36",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "E-Commerce com Flag apenas Orçamento",
              "fullTitle": "E-commerce apenas orçamento @EcommerceOrcamento: E-Commerce com Flag apenas Orçamento",
              "timedOut": false,
              "duration": 37300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESATIVO O CLIENTE\n    client.query(\"update cliente set fl_ecommerce  = '1' where cd_cliente = '51668'\")\n        .then((result) => {\n            console.log('Mudado o E-commerce para somente orçamento.')\n        })\n        .catch((err) => {\n            console.error('Erro ao mudar o E-commerce para somente orçamento:', err);\n        })\n    // FAÇO LOGIN\n    tryTo(() => Login(CNPJ_CORRETO, SENHA_CORRETA))\n    //AGUARDO PELO MENU INICIAL \n    I.waitForText('08070', 50)\n    //VOU PARA DENTRO DO PRODUTO.\n    I.amOnPage(Pagina_Produto_08070_Wildfly2)\n    I.waitForText('08070', 50)\n    //ADICIONO 50 ITENS NO PEDIDO\n    I.fillField('Quantidade', '50')\n    //NAO VEJO OS VALORES NO CARRINHO\n    I.dontSeeElement('/html/body/my-app/home-component/mat-toolbar/mat-toolbar-row[1]/div/div', 5);\n    I.wait(5)\n    //VOU PARA ABA FINALIZAR PEDIDO\n    I.amOnPage(Pagina_Carrinho_Finalizar_Wildfly2)\n    I.waitForText('08070', 50)\n    //VOU PARA O FIM DA PÁGINA.\n    I.scrollPageToBottom();\n    //CLICO EM SOLICITAR ORÇAMENTO\n    I.click('SOLICITAR ORÇAMENTO')\n    //ESPERO PELA MENSAGEM \"ORÇAMENTO SOLICITAR COM SUCESSO\"\n    I.waitForText('Orçamento solicitado com sucesso', 50)\n    I.amOnPage('file:///C:/Users/flexmobile/Documents/GitHub/AUTOMACAOLOJA/AUTOMACAO-PEDIDO-WEB/mochawesome-report/mochawesome.html')\n    I.wait(10)\n    I.saveScreenshot('Resultado.png')",
              "err": {},
              "uuid": "41b9105f-a541-416e-8aec-6858751446cb",
              "parentUUID": "7d753d4e-bf07-4446-ae35-9006916c5c36",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41b9105f-a541-416e-8aec-6858751446cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37300,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "f5683eb7-dd61-4371-b469-7793e623d4e3",
          "title": "EncerrarBanco @EncerrarBanco",
          "fullFile": "C:\\Users\\flexmobile\\Documents\\GitHub\\AUTOMACAOLOJA\\AUTOMACAO-PEDIDO-WEB\\steps\\14-FecharBancoDeDados_test.js",
          "file": "\\steps\\14-FecharBancoDeDados_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "EncerrarBanco @EncerrarBanco \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "7f2b3a24-b668-46a4-8667-ebd20ee89196",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "EncerrarBanco @EncerrarBanco \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "5adf05ea-8f3b-4388-9128-789738575860",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "EncerrarBanco @EncerrarBanco \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "2aeb8b8d-4542-4c87-b768-d29f06e2f04c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "EncerrarBanco @EncerrarBanco \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "8d34fbd4-6c4e-4f74-8bcb-b0f74efd07ab",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Encerrar conexão com o banco ",
              "fullTitle": "EncerrarBanco @EncerrarBanco: Encerrar conexão com o banco ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//FECHO A CONEXAO COM O BANCO DE DADOS\n    client.end()\n        .then(() => {\n            console.log('Conexão encerrada.');\n        })\n        .catch((err) => {\n            console.error('Erro ao fechar a conexão com o banco de dados:', err);\n        });\n    \n        \n    //ENCERRO O PROGRAMA.\n    await process.exit(0);",
              "err": {},
              "uuid": "8c416235-326f-49e8-8fdb-b38c4e34488c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "8c416235-326f-49e8-8fdb-b38c4e34488c"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {},
      "version": "6.2.0"
    }
  }
}